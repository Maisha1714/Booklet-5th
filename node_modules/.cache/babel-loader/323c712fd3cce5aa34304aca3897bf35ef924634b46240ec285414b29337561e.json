{"ast":null,"code":"var _jsxFileName = \"E:\\\\IIUC CSE\\\\SEMESTER 05\\\\Tools\\\\Final Project\\\\Booklet-Final-Project\\\\Booklet Frontend\\\\src\\\\Components\\\\UpdateService\\\\UpdateService.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateService = () => {\n  _s();\n  const {\n    serviceId\n  } = useParams();\n  const [service, setService] = useState({});\n  useEffect(() => {\n    fetch(`http://localhost:5000/books/${serviceId}`).then(res => res.json()).then(data => setService(data));\n  }, [serviceId]);\n  const handleNameChange = e => {\n    const updatedName = e.target.value;\n    const updatedService = {\n      name: updatedName,\n      price: service.price,\n      img: service.img,\n      author: service.author\n    };\n    setService(updatedService);\n  };\n  const handlePriceChange = e => {\n    const updatedPrice = e.target.value;\n    const updatedService = {\n      name: service.name,\n      price: updatedPrice,\n      img: service.img,\n      author: service.author\n    };\n    setService(updatedService);\n  };\n  const handleauthorChange = e => {\n    const updatedauthor = e.target.value;\n    const updatedService = {\n      name: service.name,\n      price: service.price,\n      img: service.img,\n      author: updatedauthor\n    };\n    setService(updatedService);\n  };\n  const handleImageChange = e => {\n    const updatedImg = e.target.value;\n    const updatedService = {\n      name: service.name,\n      price: service.price,\n      img: updatedImg,\n      author: service.author\n    };\n    setService(updatedService);\n  };\n  const handleUpdateService = e => {\n    fetch(`http://localhost:5000/books/${serviceId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(service)\n    }).then(res => res.json()).then(data => {\n      if (data.modifiedCount > 0) {\n        alert('Update Successful');\n        setService({});\n      }\n    });\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        marginTop: \"15vh\"\n      },\n      onSubmit: handleUpdateService,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Service Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: service.name || '',\n          onChange: handleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Service Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: service.price || '',\n          onChange: handlePriceChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Service author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: service.author || '',\n          onChange: handleauthorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Service Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: service.img || '',\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateService, \"bKI+WreL3a5PPlMDsEndXEdwbn8=\", false, function () {\n  return [useParams];\n});\n_c = UpdateService;\nexport default UpdateService;\nvar _c;\n$RefreshReg$(_c, \"UpdateService\");","map":{"version":3,"names":["React","useEffect","useState","Button","Form","useParams","UpdateService","serviceId","service","setService","fetch","then","res","json","data","handleNameChange","e","updatedName","target","value","updatedService","name","price","img","author","handlePriceChange","updatedPrice","handleauthorChange","updatedauthor","handleImageChange","updatedImg","handleUpdateService","method","headers","body","JSON","stringify","modifiedCount","alert","preventDefault","marginTop"],"sources":["E:/IIUC CSE/SEMESTER 05/Tools/Final Project/Booklet-Final-Project/Booklet Frontend/src/Components/UpdateService/UpdateService.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst UpdateService = () => {\r\n  const { serviceId } = useParams()\r\n  const [service, setService] = useState({})\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5000/books/${serviceId}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setService(data))\r\n  }, [serviceId])\r\n\r\n  const handleNameChange = (e) => {\r\n    const updatedName = e.target.value\r\n    const updatedService = {\r\n      name: updatedName,\r\n      price: service.price,\r\n      img: service.img,\r\n      author: service.author,\r\n    }\r\n    setService(updatedService)\r\n  }\r\n  const handlePriceChange = (e) => {\r\n    const updatedPrice = e.target.value\r\n    const updatedService = {\r\n      name: service.name,\r\n      price: updatedPrice,\r\n      img: service.img,\r\n      author: service.author,\r\n    }\r\n    setService(updatedService)\r\n  }\r\n  const handleauthorChange = (e) => {\r\n    const updatedauthor = e.target.value\r\n    const updatedService = {\r\n      name: service.name,\r\n      price: service.price,\r\n      img: service.img,\r\n      author: updatedauthor,\r\n    }\r\n    setService(updatedService)\r\n  }\r\n  const handleImageChange = (e) => {\r\n    const updatedImg = e.target.value\r\n    const updatedService = {\r\n      name: service.name,\r\n      price: service.price,\r\n      img: updatedImg,\r\n      author: service.author,\r\n    }\r\n    setService(updatedService)\r\n  }\r\n\r\n  const handleUpdateService = (e) => {\r\n    fetch(`http://localhost:5000/books/${serviceId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(service),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.modifiedCount > 0) {\r\n          alert('Update Successful')\r\n          setService({})\r\n        }\r\n      })\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form style={{marginTop: \"15vh\"}} onSubmit={handleUpdateService}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Service Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={service.name || ''}\r\n            onChange={handleNameChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Service Price</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={service.price || ''}\r\n            onChange={handlePriceChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Service author</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={service.author || ''}\r\n            onChange={handleauthorChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Service Image</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={service.img || ''}\r\n            onChange={handleImageChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Update\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateService\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}